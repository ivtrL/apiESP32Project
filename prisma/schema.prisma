// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url  	= env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  // If you want to use Prisma Migrate, you will need to manually create a shadow database
  // https://neon.tech/docs/guides/prisma-migrate#configure-a-shadow-database-for-prisma-migrate
  // make sure to append ?connect_timeout=10 to the connection string
  // shadowDatabaseUrl = env(“SHADOW_DATABASE_URL”)
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  name        String?
  password    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String    @unique
  cards       Card[]
}

model Card {
  id          Int       @id @default(autoincrement())
  cardUid     String    @unique
  user        User      @relation(fields: [userId], references: [userId])
  userId      String
  logs        Log[]
}

model Device {
  id          Int       @id @default(autoincrement())
  deviceUid   String    @unique
  deviceName  String
  Logs        Log[]
}

model Log {
  id          Int       @id @default(autoincrement())
  logId       String    @unique
  cardUid      String
  card        Card      @relation(fields: [cardUid], references: [cardUid])
  deviceUid   String    
  device      Device    @relation(fields: [deviceUid], references: [deviceUid])
  time        Time[]
  Authorized  Boolean
}

model Time {
  id          Int       @id @default(autoincrement())
  logId       String
  log         Log       @relation(fields: [logId], references: [logId])
  exit        Boolean
  createdAt   DateTime  @default(now())
}

model Admin {
  id         Int       @id @default(autoincrement())
  AdminId    String    @unique
  email      String    @unique
  password   String
  name       String?
}
